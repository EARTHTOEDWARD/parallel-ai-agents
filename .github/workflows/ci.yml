name: CI Pipeline

on:
  push:
    branches: [main, backend-opus, frontend-opus, test-opus]
  pull_request:
    branches: [main]

jobs:
  validate:
    name: Validate Code Quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x, 20.x]

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all branches

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npm audit || true  # Don't fail on audit issues but report them

      - name: Check for missing dependencies
        run: |
          npm ls || exit 1
          echo "All dependencies resolved successfully"

      - name: Run Linter
        run: npm run lint

      - name: Run Type Checking
        run: npm run typecheck

      - name: Run Tests
        run: npm run test:coverage

      - name: Upload Coverage Reports
        uses: actions/upload-artifact@v4
        with:
          name: coverage-reports-${{ matrix.node-version }}
          path: coverage/

      - name: Check Test Coverage
        run: |
          COVERAGE=$(cat coverage/coverage-summary.json | jq '.total.lines.pct')
          echo "Total coverage: $COVERAGE%"
          if (( $(echo "$COVERAGE < 80" | bc -l) )); then
            echo "Coverage is below 80% threshold"
            exit 1
          fi

  security:
    name: Security Checks
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run security audit
        run: |
          npm audit --production

      - name: Check for secrets
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD
        if: github.event_name == 'pull_request' || github.event.before != '0000000000000000000000000000000000000000'

  agent-integration:
    name: Agent Integration Tests
    runs-on: ubuntu-latest
    needs: validate

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check Backend Agent Changes
        if: github.ref == 'refs/heads/backend-opus'
        run: |
          echo "Validating backend agent changes..."
          cd backend && npm test

      - name: Check Frontend Agent Changes
        if: github.ref == 'refs/heads/frontend-opus'
        run: |
          echo "Validating frontend agent changes..."
          cd frontend && npm test

      - name: Check Test Agent Changes
        if: github.ref == 'refs/heads/test-opus'
        run: |
          echo "Validating test agent changes..."
          npm test

  merge-readiness:
    name: Merge Readiness Check
    runs-on: ubuntu-latest
    needs: [validate, security]
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4

      - name: Check PR Compliance
        run: |
          # Check commit messages follow convention
          COMMITS=$(git log --format=%s origin/main..HEAD)
          PATTERN='^\[(backend|frontend|test)-opus\] (feat|fix|docs|style|refactor|test|chore):'

          while IFS= read -r commit; do
            if ! [[ "$commit" =~ $PATTERN ]]; then
              echo "Invalid commit message: $commit"
              echo "Expected format: [agent-branch] type: description"
              exit 1
            fi
          done <<< "$COMMITS"

          echo "All commit messages follow convention ✓"

      - name: Generate Merge Report
        run: |
          echo "## Merge Readiness Report" > merge-report.md
          echo "" >> merge-report.md
          echo "- ✅ All tests passing" >> merge-report.md
          echo "- ✅ Security checks passed" >> merge-report.md
          echo "- ✅ Commit messages valid" >> merge-report.md
          echo "- ✅ No merge conflicts" >> merge-report.md

      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const report = fs.readFileSync('merge-report.md', 'utf8');
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: report
            });

  python-validation:
    name: Python Code Validation
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black ruff mypy

      - name: Format check with Black
        run: black --check scripts/

      - name: Lint with Ruff
        run: ruff check scripts/

      - name: Type check with mypy
        run: mypy scripts/ || true # Don't fail on type errors initially
